services:
  mongo:
    image: mongo:6
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:7
    restart: unless-stopped

  backend:
    build: ./backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 4000
      MONGODB_URI: ${MONGODB_URI}
      MONGODB_DB: ${MONGODB_DB}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGINS: ${CORS_ORIGINS}
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    volumes:
      - uploads-data:/app/public/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:4000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  worker:
    build: ./backend
    command: node dist/src/workers/notificationWorker.js
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      MONGODB_URI: ${MONGODB_URI}
      MONGODB_DB: ${MONGODB_DB}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongo
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE}
        BACKEND_INTERNAL_URL: ${BACKEND_INTERNAL_URL}
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE}
      BACKEND_INTERNAL_URL: ${BACKEND_INTERNAL_URL}
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:80/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  mongo-data: {}
  uploads-data: {}
  caddy-data: {}
  caddy-config: {}